<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<!-- namespace : 해당 mapper파일의 고유한 별칭 -->
<mapper namespace="memberMapper">

<!-- 

	* DML문일때
	< insert | update | delete id="" [parameterType="풀클래스명|별칭"] > 
	  ㄴ DML문은 실행결과가 행수(int) 고정이라 resultType/Map 속성 필요없음!	
		
	* SELECT문일때
	< select id="각 sql문의 식별자" [parameterType=""] resultType=""|resultMap="" >
	  ㄴ resultType : 조회결과반환타입
	  ㄴ resultMap : 조회결과로매핑할resultMap의 id
	  
	? 대신 #{필드명/변수명/키값} 이렇게 넣으면 됨 
 -->
 
 	<!-- 
 		* resultMap : MyBatis의 핵심기능중 하나!!!
 		
 		  ResultSet은 조회된 column값 하나씩 뽑아서 담던거(매핑)
 		    ㄴ JDBC 코드를 줄여주는 역할을 수행함
 		    
 		  <resultMap id="식별자" type="담을 vo객체의 타입">
 		  	<result column="조회결과를 뽑을칼럼" property="결과담을필드명" />
 		  	<result column="조회결과를 뽑을칼럼" property="결과담을필드명" />
 		  	<result column="조회결과를 뽑을칼럼" property="결과담을필드명" />
 		  </resultMap>
 	 -->
 	<resultMap id="memberResultSet" type="Member">
 		<result column="user_no" property="userNo" />
 		<result column="user_id" property="userId" />
 		<result column="user_pwd" property="userPwd" />
 		<result column="user_name" property="userName" />
 		<result column="email" property="email" />
 		<result column="birthday" property="birthday" />
 		<result column="gender" property="gender" />
 		<result column="phone" property="phone" />
 		<result column="address" property="address" />
 		<result column="enroll_date" property="enrollDate" />
 		<result column="modify_date" property="modifyDate" />
 		<result column="status" property="status" />
 	</resultMap>
 
 	<select id="loginMember" parameterType="Member" resultMap="memberResultSet">
 		  select 
		         user_no
		       , user_id
		       , user_pwd
		       , user_name
		       , email
		       , birthday
		       , gender
		       , phone
		       , address
		       , enroll_date
		       , modify_date
		       , status
       	    from member
		   where user_id = #{userId}
		     and user_pwd = #{userPwd}
		     and status = 'Y'
 	</select>
 
	<insert id="insertMember" parameterType="Member">
		   insert
             into member
		        (
		          user_no
		        , user_id
		        , user_pwd
		        , user_name
		        , email
		        , birthday
		        , gender
		        , phone
		        , address
		        )
           values 
		        (
		          seq_uno.nextval
		        , #{userId}
		        , #{userPwd}
		        , #{userName}
		        , #{email}
		        , #{birthday}
		        , #{gender}
		        , #{phone}
		        , #{address}
		        )
	</insert>
	
	
	
</mapper>